-------list all employees whose sal > 1600 and < 3000
select *
from emp
where sal> 1600 and sal <3000;


between and

select *
from emp
where sal between 1601 and 2999;

-----list all employee with sal  not greater than or equal to 1600
and less than or equal to 3000
select *
from emp
where sal not between 1600 and 3000;


-----list all employees with salary  either 1600 or 2500 or 2100

select * 
from emp
where sal=1600 or sal=2500 or sal=2100;

in operator

select * 
from emp
where sal in (1600,2500,2100);


-----list all employees who are working as MANAGER or CLERK
or ANALYST
select * 
from emp
where job in ('MANAGER','CLERK','ANALYST');

------list all employees with name starts with M
select *
from emp
where ename like 'M%';

% - 0  or more characters
_ - matches with one character

------list all employees whose name contains  M somewhere in the name

select *
from emp
where ename like '%M%';

------list all employees whose name contains  M at second position

select *
from emp
where ename like '_M%';

----list all employees whose name contains  M at second last 
position
select *
from emp
where ename like '%M_';

----list all employees whose name starts with M or A or k 
select *
from emp
where ename not like 'M%' or ename like'A%' or ename like'K%'

select *
from emp
where ename REGEXP '^M|^A|^K'


REGEXP
^ --- starts with
$ --- ends with
. ---- matches any one character
[] --- matches one character from the given set  
* ----- 0 or more occurances
+ ------ 1 or more occurances
? ----- 0 or 1 occurrances

A%

'^A'
A
A1
A!
Ajashhjfhsjfhjsh
CAnsdskjdsjk

'A$'
A
kjhfhsA
1A
jahsdjh

'^..A$'

asdjahsjhajdhA
asA
^A[aeiou]..B$

AesdB

^ac?.D$

abD
acfD

(^a..S$|^B.S|^RB.+)

select *
from emp
where ename REGEXP '^A..B$'

^A[^aeiou].F$

[^A-Za-z0-9]


------ list all employees in sorted order of sal who works as Manager

select *
from emp
where job='MANAGER'
order by sal;


-------------------
----- list all employees with name "jones' and salry >1500   100000 20000  5 
select *
from emp
where ename='JONES' and sal>1500;

select *
from emp
where sal>1500 and ename='JONES'

-----find sum of sal for all managers in for each department

select deptno,sum(sal)
from emp
where job='MANAGER'
group by deptno;

--------find sum of sal for all employees with sal equal to 1600,2500,2100

select sum(sal)
from emp
where sal in (1600,2500,2100);


-------find avg of sal for each department for each job

select deptno,job,avg(sal)
from emp
group by deptno,job;


select deptno,count(*)
from emp
group by deptno
having count(*)>15;

-----list sum of sal,and count department wise and  jobwise if 
sum(sal)>15000 and count>3

select deptno,job,sum(sal),count(*)
from emp
group by deptno,job
having sum(sal)>15000 and count(*) >3;

-----list sum of sal, max sal,count for each job for all employees who are in
department 20 or 30 and they earn commission if count > 5
select job,sum(sal),max(sal),count(comm)
from emp
where deptno in (20,30) and comm is not null
group by job
having count(*)>5 
order by sum(sal)


select deptno,count(*)
from emp
where deptno=10
group by deptno;


---list sum of sal,min sal,max sal and number of employees 
  working under same manager with salary >2000
only if number of employees are < 7

select mgr,sum(sal),min(sal),max(sal),count(*)
from emp
where sal>200
group by mgr
having count(*)<7;


Number functions
ifnull
ceil
floor
round
truncate
abs
sqrt

string related function
concat
INSTR
lower
upper
LPAD
trim
insert

date related
exctract
datediff
date_format
str_to_date
curdate()
now()


create table -DDL operation
drop
truncate
alter


DML --insert 
update
delete


pid pname qty price


primary key
unique   ----no duplicates but any number of nulls are ok
foreign key
not null
check
default

123

2 types
table level ---
field level ---- not null default 

dept
deptno primary key----unique ---not null
dname
dloc

create table dept(
deptid int primary key,
dname varchar(20) not null,
dloc varchar(10)
);



employee
eid  not null
ename
address   default Aundh
adharnum
dOJ 
sal check(sal >5000)  3000
deptno

create table employee(
eid int primary key,
ename varchar(15),
address varchar(30) default 'Aundh',
adharnum int unique not null,
doj date,
sal decimal(11,2),
deptno int references dept(deptid)
)



insert into dept  values(10,'HR','Mumbai');


product
pid 
pname
qty
cid   ---foreign key

category
catid
cname

create table category(
catid int primary key,
cname varchar(20)
)

create table product(
pid int primary key,
pname varchar(30),
qty int check (qty>0),
cid int,
FOREIGN KEY fk_cat(cid) 
REFERENCES category(catid)
ON UPDATE CASCADE
ON DELETE set null
)

student
sid
cid
marks


create table student(
sid int,
cid int,
marks int,
primary key(sid,cid)
)

Create temporary table mytable(
Id int primary key auto_increment,
Name varchar(10),
Addr varchar(20));

temporary table will be available in only current session
temporary table name and permanent table name can be same

till temporary table with same name is available till the time 
permanent table will not be accessible


Insert into mytable values(default,’Kishori’,’Aundh’)
savepoint A
Insert into mytable(name,addr) values(’Kishori’,’Aundh’)
savepoint B
Insert into mytable(name,addr) values(’Kishori’,’Aundh’)
rollback;
delete 
from product;
commit;
rollback;

#delete all rows but keep empty table
#rollback not possible
truncate table product;

#delete all rows as well as table
drop table product;

Insert into mytable(name,addr) values(’Kishori’,’Aundh’)
Insert into mytable(name,addr) values(’Kishori’,’Aundh’)
Insert into mytable(name,addr) values(’Kishori’,’Aundh’)
create table mytab(


)
rollback;

DML

insert 
update
delete

delete 
from emp
where deptno=10;

delete
from emp
where sal between 2000 and 4000;


update emp
set sal=sal*1.10
where sal>2000;


update emp
set sal=1.10*sal,job='Sr.Manager',comm=600
where deptno in (10,20)

-----change mgr of SMITH to 7299,deptno to 20

update emp
set mgr=7299,deptno=20
where ename='SMITH'

-----alter table

for constraint
add constraint
drop <name>


----for column
-add column
---drop column
----modify
----change

---for table
rename

Question 
Add foolowing constraints on existing table
emp ----primary key,deptno foreign key 
dept  -- primary key
      ----add new column deptdetails --- vrachar(200)
salgrade
     ---- grade -----primary key


subqueries

------list all employees with salary > Allen's salary
select sal
from emp
where ename='ALLEN'


select *
from emp
where sal > any (
	select sal
	from emp
	where ename='ALLEN'
	);

----list all employees with sal > average sal of dept 10

select *
from emp
where sal >(
	select avg(sal)
	from emp
	where deptno=10);


------list all employees who works in Smith's department

select ename
from emp
where deptno in (
	select deptno
	from emp
	where ename='SMITH')

-------list all employees whose salary is > allen's salary
   2000 and < 
Blake salary 4000

select *
from emp
where sal between (select sal 
		   from emp
		   where ename='ALLEN') e  and (select sal 
		   				from emp
		   				where ename='BLAKE')



------update salary of James to 1000 more than smith's salary
update emp
set sal=(select sal
	 from emp
	where ename='SMITH')+1000
where ename='James';


-----delete all employees who are working under Blake
delete
from emp
where mgr=(select empno
		from emp
		where ename='Blake')


----- list all employees with salary greater than 
average salary of smith's department
select ename
from emp
where sal > (
		select avg(sal)
		from emp
		where deptno =(
				select deptno
				from emp
				where ename='SMITH'
				)
				)

































